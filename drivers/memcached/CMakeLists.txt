cmake_minimum_required(VERSION 2.8.3)

get_filename_component(REAL_PROJECT_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../.." REALPATH)
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_SOURCE_DIR} ${REAL_PROJECT_ROOT_DIR})

if(PROJECT_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    find_package(VarnishAPI)
    find_package(libMemcached REQUIRED)

    add_definitions(-DMEMCACHED_SHARED_DRIVER=1)
    get_filename_component(REAL_PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../src" REALPATH)
    declare_vmod(
        INSTALL
        NAME keystore_memcached
        VCC ${CMAKE_CURRENT_SOURCE_DIR}/src/vmod_keystore_memcached.vcc
        SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/vmod_keystore_memcached.c
        ADDITIONNAL_LIBRARIES ${LIBMEMCACHED_LIBRARIES} "${VARNISHAPI_VMODDIR}/libvmod_keystore.so"
        ADDITIONNAL_INCLUDE_DIRECTORIES ${LIBMEMCACHED_INCLUDE_DIRS} ${REAL_PROJECT_SOURCE_DIR}
    )
else(PROJECT_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    find_package(libMemcached QUIET)
    if(LIBMEMCACHED_FOUND)
        declare_driver(
            NAME "memcached"
            SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/vmod_keystore_memcached.c
            ADDITIONNAL_LIBRARIES ${LIBMEMCACHED_LIBRARIES}
            ADDITIONNAL_INCLUDE_DIRECTORIES ${LIBMEMCACHED_INCLUDE_DIRS}
        )
    endif(LIBMEMCACHED_FOUND)
endif(PROJECT_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
